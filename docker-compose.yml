version: "3.7"

services:
  mysql_service:
    image: mysql:8.0
    hostname: mysql_service
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - 3306:3306
    expose:
      - 3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE_DEFAULT}
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping"]
      interval: 10s
      timeout: 2s
      retries: 10

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    hostname: phpmyadmin
    depends_on:
      - mysql_service
    links:
      - mysql_service
    environment:
      PMA_HOST: mysql_service
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always

  redis_db_service:
    image: redis
    hostname: redis_db_service
    restart: always
    command: >
      --requirepass ${REDIS_PASSWORD}
    ports:
      - 6377:6379
    container_name: redis_db_service

  timescaledb:
    hostname: timescaledb
    image: timescale/timescaledb-ha:pg14-latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    command: postgres -c 'max_connections=10'
    volumes:
      - /developer/postgresql_data:/var/lib/postgresql/data:z
      - /developer/db_backups:/db_backups:z
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - 5432:5432
    expose:
      - 5432
  pgbouncer:
    image: docker.io/bitnami/pgbouncer:1
    restart: always
    ports:
      - 6432:6432
    environment:
      - POSTGRESQL_HOST=timescaledb
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
      # - POSTGRESQL_DATABASE=${POSTGRES_DB}

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer-data:/data

  nginx:
    image: nginx:1.22.0-alpine
    hostname: nginx
    restart: unless-stopped
    environment:
      - NGINX_HOST=${MAIN_HOST}
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
    volumes:
      - ./nginx/template:/etc/nginx/templates
    ports:
      - 80:80
      - 443:443
      # - 25:25
      # - 143:143
      # - 587:587
    links:
      # - portainer
      - phpmyadmin
      - timescaledb
      - redis_db_service
    depends_on:
      # - portainer
      - phpmyadmin
      - timescaledb
      - redis_db_service
volumes:
  portainer-data:
  mysql:
