version: "3.8"
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-08-13T21-54-44Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  # restart: always
  environment:
    - MINIO_ROOT_USER=wazier
    - MINIO_ROOT_PASSWORD=wazier
  expose:
    - "9000"
    - "9001"
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

services:
  mysql_service:
    image: mysql:8.0
    hostname: mysql_service
    container_name: mysql_service
    restart: always
    volumes:
      - /developer/mysql:/var/lib/mysql
    ports:
      - 3306:3306
    expose:
      - 3306
    environment:
      - MYSQL_ROOT_PASSWORD=mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping"]
      interval: 10s
      timeout: 2s
      retries: 10
  redis_db_service:
    image: redis
    hostname: redis_db_service
    restart: always
    ports:
      - 6379:6379
    expose:
      - 6379
    container_name: redis_db_service
  timescaledb:
    # image: timescale/pg_prometheus:latest-pg10
    image: timescale/timescaledb-ha:pg14-latest
    container_name: timescaledb
    restart: always
    volumes:
      - /developer/postgresql_data:/var/lib/postgresql/data:z
      - /developer/db_backups:/db_backups:z
    ports:
      - 5432:5432/tcp
    hostname: timescaledb

  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2
    environment:
      TIMESCALEDB_TELEMETRY: "off"
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
  nginx:
    image: nginx:1.19.2-alpine
    container_name: nginx_service
    hostname: nginx
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
      - mysql_service

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
