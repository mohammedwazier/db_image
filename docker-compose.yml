version: "3.7"

services:
  mysql_service:
    image: mysql:latest
    hostname: mysql_service
    restart: always
    # platform: linux/arm64/v8
    volumes:
      - mysql:/var/lib/mysql
    # ports:
    #   - 3306:3306
    # expose:
    #   - 3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE_DEFAULT}
      - MYSQL_ROOT_HOST=%
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping" ]
      interval: 10s
      timeout: 2s
      retries: 10
  mssql:
    platform: linux/amd64
    image: mcr.microsoft.com/mssql/server:2022-latest
    #image: mcr.microsoft.com/azure-sql-edge
    restart: always
    environment:
      - MSSQL_SA_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - ACCEPT_EULA=1
    ports:
      - "1433:1433"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    hostname: phpmyadmin
    depends_on:
      - mysql_service
    links:
      - mysql_service
    environment:
      PMA_HOST: mysql_service
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    # restart: always

  redis_db_service:
    image: redis
    hostname: redis_db_service
    restart: always
    command: >
      --requirepass ${REDIS_PASSWORD}
    ports:
      - 6377:6379
    container_name: redis_db_service

  timescaledb:
    hostname: timescaledb
    image: timescale/timescaledb-ha:pg14-latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    command: postgres -c 'max_connections=10'
    volumes:
      - /developer/postgresql_data:/var/lib/postgresql/data:z
      - /developer/db_backups:/db_backups:z
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U postgres -d ${POSTGRES_DB}'"
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - 5432:5432
    expose:
      - 5432
  pgbouncer:
    image: docker.io/bitnami/pgbouncer:1
    restart: always
    ports:
      - 6432:6432
    environment:
      - POSTGRESQL_HOST=timescaledb
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
      # - POSTGRESQL_DATABASE=${POSTGRES_DB}
  oracle:
    image: gvenzl/oracle-free
    restart: always
    ports:
      - 1521:1521
    # env:
      # ORACLE_RANDOM_PASSWORD: true
      # APP_USER: my_user
      # APP_USER_PASSWORD: password_i_should_change
    environment:
      - ORACLE_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - APP_USER=masihkasar
      - APP_USER_PASSWORD=${MYSQL_ROOT_PASSWORD}

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "9443:9443"
      - "9000:9000"
    expose:
      - 9000
      - 9443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer-data:/data


  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq-local'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=${MYSQL_ROOT_PASSWORD}
    networks:
        - rabbitmq_net

  nginx:
    image: nginx:1.22.0-alpine
    hostname: nginx
    restart: unless-stopped
    environment:
      - NGINX_HOST=${MAIN_HOST}
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
    volumes:
      - ./nginx/template:/etc/nginx/templates
    ports:
      - 80:80
      - 443:443
      - 3306:3306
      # - 25:25
      # - 143:143
      # - 587:587
    links:
      - portainer
      - mysql_service
    #   # - phpmyadmin
    #   # - timescaledb
    #   # - redis_db_service
    depends_on:
      - portainer
      - mysql_service
    #   # - portainer
    #   # - phpmyadmin
    #   # - timescaledb
    #   # - redis_db_service

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    container_name: es01
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.5.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
  mongodb:
    image: mongo:6-jammy
    ports:
      - '27039:27017'
    volumes:
      - dbdata6:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
  mongo-express:
    image: mongo-express
    restart: always
    links:
      - mongodb
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MYSQL_ROOT_PASSWORD} 
      - ME_CONFIG_MONGODB_URL=mongodb://root:${MYSQL_ROOT_PASSWORD}@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=masihkasar
      - ME_CONFIG_BASICAUTH_PASSWORD=${MYSQL_ROOT_PASSWORD}

networks:
  rabbitmq_net:
    driver: bridge

volumes:
  portainer-data:
  mysql:
  elasticsearch-data:
    driver: local
  dbdata6:
    driver: local

